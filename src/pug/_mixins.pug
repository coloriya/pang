
mixin PangDownload(download)
	| !{app.nl}
	div.download(class=download.getRes())
		div.top
			span.res(class=download.getRes())= download.getRes()
			span.resx= download.getResX()
		div.middle
			h4.name= download.getName()
		| !{app.nl}
		div.bottom
			a(href=download.getRelativeURL() download) Download
			span.size= download.getSizeKB()

mixin Colorbox(color)
	div.colorbox
		//-p(class=color.getClassName())
		p(style=color.getBgStyle())
		b= color.getHexCode()

mixin Colorshelf(palette)
	| !{app.nl}
	div.colorshelf
		| !{app.nl}
		each color in palette.colors
			| !{app.nl}
			+Colorbox(color)



mixin NextPreviousPageLinks(me)
	| !{app.nl}
	div.nextprev
		div.prev
			if me.prev
				a(href=me.prev.getRelativeURL())
					| !{app.nl}
					div.title= me.prev.getTitle()
					div.name Previous
					div.sub= me.prev.getSubTitle()
		| !{app.nl}
		div.next
			if me.next
				a(href=me.next.getRelativeURL())
					| !{app.nl}
					div.title= me.next.getTitle()
					div.name Next
					div.sub= me.next.getSubTitle()



mixin PaletteList(palettes)
	each palette in palettes
		| !{app.nl}
		div.palette
			div.title
				h2
					- let href = `palette/${palette.id}`;
					a(href=href) Palette no. #{palette.id}
			+PaletteType(palette)
			+Colorshelf(palette)
			+PaletteHues(palette)




mixin PaletteType(palette)
	div.type
		h4
			span.n ##{palette.getTypeNIndex()} 
			span.in in
			+TypeLinkButton(palette.type)

mixin PaletteHues(palette)
	div.hues
		each hue in palette.hues
			+HueLinkButton(hue)



mixin HueLinkButton(hue)
	a.hue-link-button(href=hue.getHref())
		span.text Hue #{hue.hue_start}&deg;
		span.count= hue.getNumberOfPalettes()

mixin TypeLinkButton(type)
	a.type-link-button(href=type.getHref())
		span.text= type.title
		span.count= type.getNumberOfPalettes()



